=======================================
info.json for plugins - sensors section
=======================================

Purpose
=======

The sensors section will quickly describe each sensor with:

* a name
* a data type. See :doc:`the data types documentation <../data_types/index>` for more informations
* if needed, some conversion options


..todo :: describe conversion options

Example 1
=========

This example is the *diskfree* plugin. See the :doc:`device types documentation <device_types>` for more informations.

For each sensor, we define a name and no conversion option. Then, depending of the sensor we use 2 data types:

* DT_Byte : this one is used for values in byte, which are the values returned by the sensors *get_free_space*, *get_used_space* and *get_total_space*.
* DT_Scaling is used for values in percent from 0 to 100, which corresponds to the value returned by the sensor *get_percent_used*.

::

        "sensors": {
            "get_free_space": {
                    "name": "Free Space",
                    "data_type": "DT_Byte",
                    "conversion": "",
                    "history": {
                        "store": True,
                        "max": 0,
                        "expire": 0,
                        "round_value": 0
                    }
            },
            "get_used_space": {
                    "name": "Used Space",
                    "data_type": "DT_Byte",
                    "conversion": "",
                    "history": {
                        "store": True,
                        "max": 0,
                        "expire": 0,
                        "round_value": 0
                    }
            },
            "get_total_space": {
                    "name": "Total Space",
                    "data_type": "DT_Byte",
                    "conversion": "",
                    "history": {
                        "store": True,
                        "max": 0,
                        "expire": 0,
                        "round_value": 0
                    }
            },
            "get_percent_used": {
                    "name": "Percent used",
                    "data_type": "DT_Scaling",
                    "conversion": "",
                    "history": {
                        "store": True,
                        "max": 0,
                        "expire": 0,
                        "round_value": 0
                    }
            }
        },

Description
===========

Each item has several properties: 

* **name** : it is a string used to display this sensor on the UI
* **data_type** : the data type used for this sensor
* **type** : defines the sensor type, it can have the folowing values
    * **absolutes** : store the value after the conversion
    * **incremental** : store the difference between the last value and the current value
* **conversion** : if not an empty string, what conversion function to call before storing the value in the db, the function should return the data in the format acording to the data_type
* **history** : some extra parameters that can be used to define what to store in the history table
    * **store** : can be True or False, if True the values will be stored in the sensor_history table
    * **max** : max number of records that will be stored in the history table, if 0 the max number is infinate, this will only be evaluated if tstore is True
    * **expire** : how long the history needs to be kept, if 0 the stats will bekept forever. Its counted in days, so a value of 10 means keep the history for 10 days. This will only be evaluated if store is True
    * **round_value** : a number that will be used for the reduced stats storage. This will only be evaluated if tstore is True
