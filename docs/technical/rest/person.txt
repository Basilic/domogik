===========================
/person - person management
===========================

Available actions : 

* GET : get one or several person information
* POST : create a new person
* PUT : update an existing person
* DELETE : delete a existing person


GET
===

This method is used to get informations about existing persons. There are several way to call the **/person** url with the GET method.

/person
-------

All the persons will be returned in a json table. 

Example: ::

    Method : GET
    Url : http://127.0.0.1:40405/person
    Response (application/json) : 
    [
        {
            "first_name": "Admin",
            "last_name": "Admin",
            "id": 1,
            "birthdate": "1900-01-01",
            "user_accounts":
            [
                {
                    "skin_used": "",
                    "core_person": null,
                    "person": null,
                    "is_admin": true,
                    "person_id": 1,
                    "login": "admin",
                    "id": 1
                }
            ]
        },
        {...}
     ]
    
/person/<person id>
---------------------

The person corresponding to the given id will be returned in a json.

Example: ::

    Method : GET
    Url : http://127.0.0.1:40405/person/<person id>
    Response (application/json) :
    {
        "first_name": "Admin",
        "last_name": "Admin",
        "id": 1,
        "birthdate": "1900-01-01",
        "user_accounts":
        [
            {
                "skin_used": "",
                "core_person": null,
                "person": null,
                "is_admin": true,
                "person_id": 1,
                "login": "admin",
                "id": 1
            }
        ]
    }

POST /person
============

This method is used to create a new person.

Example: ::

    Method : GET
    Url : http://127.0.0.1:40405/person/<person id>
    Headers:
        Content-Type: application/x-www-form-urlencoded
    Body without a person_id: 
        first_name=The first name for this person
        last_name=The last name for this person
        birthday=The birthday for this person
    Response (application/json) :
    {
        "first_name": "Admin",
        "last_name": "Admin",
        "id": 1,
        "birthdate": "1900-01-01",
        "user_accounts":
        [
            {
                "skin_used": "",
                "core_person": null,
                "person": null,
                "is_admin": true,
                "person_id": 1,
                "login": "admin",
                "id": 1
            }
        ]
    }

PUT /person
===========

This method is used to update the information about a person.

Example: ::

    Method : PUT
    Url : http://127.0.0.1:40405/person/<person id>
    Headers:
        Content-Type: application/x-www-form-urlencoded
    Body without a person_id: 
        first_name=The first name for this person
        last_name=The last name for this person
        birthday=The birthday for this person
    Response (application/json) :
    {
        "first_name": "Admin",
        "last_name": "Admin",
        "id": 1,
        "birthdate": "1900-01-01",
        "user_accounts":
        [
            {
                "skin_used": "",
                "core_person": null,
                "person": null,
                "is_admin": true,
                "person_id": 1,
                "login": "admin",
                "id": 1
            }
        ]
    }

DELETE /person
==============

This method is used to delete a person.

Example: ::

    Method : PERSON
    Url : http://127.0.0.1:40405/person/<person id>
    Headers:
        Content-Type: application/x-www-form-urlencoded
    Response (application/json) :
    {
        "first_name": "Admin",
        "last_name": "Admin",
        "id": 1,
        "birthdate": "1900-01-01",
        "user_accounts":
        [
            {
                "skin_used": "",
                "core_person": null,
                "person": null,
                "is_admin": true,
                "person_id": 1,
                "login": "admin",
                "id": 1
            }
        ]
    }

